/**
 * Design tokens are all the values needed to construct and maintain a design system —
 * spacing, color, typography, object styles, animation, etc. — represented as data.
 * These can represent anything defined by design: a color as a RGB value, an opacity
 * as a number, an animation ease as Bezier coordinates.
 */
export declare const colors: {
    neon: string;
    grass: string;
    mint: string;
    nightSky: string;
    black: string;
    white: string;
    gray: string;
    error: string;
    nightSky100: string;
    nightSky150: string;
    nightSky200: string;
    nightSky250: string;
    nightSky300: string;
    nightSky350: string;
    nightSky400: string;
    nightSky450: string;
    nightSky500: string;
    nightSky550: string;
    nightSky600: string;
    nightSky650: string;
    nightSky700: string;
    nightSky750: string;
    nightSky800: string;
    gray0: string;
    gray50: string;
    gray100: string;
    gray150: string;
    gray200: string;
    gray250: string;
    gray300: string;
    gray350: string;
    gray400: string;
    gray450: string;
    gray500: string;
    gray550: string;
    gray600: string;
    gray650: string;
    gray700: string;
    gray750: string;
    gray800: string;
    gray850: string;
    gray900: string;
    gray950: string;
    neonGray50: string;
    neonGray100: string;
    neonGray150: string;
    neonGray200: string;
    neonGray250: string;
    neonGray300: string;
    neonGray350: string;
    neonGray400: string;
    neonGray450: string;
    neonGray500: string;
    neonGray550: string;
    neonGray600: string;
    neonGray650: string;
    neonGray700: string;
    neonGray750: string;
    neonGray800: string;
    neonGray850: string;
    neonGray900: string;
    pink100: string;
    pink150: string;
    pink200: string;
    pink250: string;
    pink300: string;
    pink350: string;
    pink400: string;
    pink450: string;
    pink500: string;
    pink550: string;
    pink600: string;
    pink650: string;
    pink700: string;
    pink750: string;
    pink800: string;
    purple100: string;
    purple150: string;
    purple200: string;
    purple250: string;
    purple300: string;
    purple350: string;
    purple400: string;
    purple450: string;
    purple500: string;
    purple550: string;
    purple600: string;
    purple650: string;
    purple700: string;
    purple750: string;
    purple800: string;
    deepPurple100: string;
    deepPurple150: string;
    deepPurple200: string;
    deepPurple250: string;
    deepPurple300: string;
    deepPurple350: string;
    deepPurple400: string;
    deepPurple450: string;
    deepPurple500: string;
    deepPurple550: string;
    deepPurple600: string;
    deepPurple650: string;
    deepPurple700: string;
    deepPurple750: string;
    deepPurple800: string;
    blue100: string;
    blue150: string;
    blue200: string;
    blue250: string;
    blue300: string;
    blue350: string;
    blue400: string;
    blue450: string;
    blue500: string;
    blue550: string;
    blue600: string;
    blue650: string;
    blue700: string;
    blue750: string;
    blue800: string;
    lightBlue100: string;
    lightBlue150: string;
    lightBlue200: string;
    lightBlue250: string;
    lightBlue300: string;
    lightBlue350: string;
    lightBlue400: string;
    lightBlue450: string;
    lightBlue500: string;
    lightBlue550: string;
    lightBlue600: string;
    lightBlue650: string;
    lightBlue700: string;
    lightBlue750: string;
    lightBlue800: string;
    neon100: string;
    neon150: string;
    neon200: string;
    neon250: string;
    neon300: string;
    neon350: string;
    neon400: string;
    neon450: string;
    neon500: string;
    neon550: string;
    neon600: string;
    neon650: string;
    neon700: string;
    neon750: string;
    neon800: string;
    mint100: string;
    mint150: string;
    mint200: string;
    mint250: string;
    mint300: string;
    mint350: string;
    mint400: string;
    mint450: string;
    mint500: string;
    mint550: string;
    mint600: string;
    mint650: string;
    mint700: string;
    mint750: string;
    mint800: string;
    grass100: string;
    grass150: string;
    grass200: string;
    grass250: string;
    grass300: string;
    grass350: string;
    grass400: string;
    grass450: string;
    grass500: string;
    grass550: string;
    grass600: string;
    grass650: string;
    grass700: string;
    grass750: string;
    grass800: string;
    lightGreen100: string;
    lightGreen150: string;
    lightGreen200: string;
    lightGreen250: string;
    lightGreen300: string;
    lightGreen350: string;
    lightGreen400: string;
    lightGreen450: string;
    lightGreen500: string;
    lightGreen550: string;
    lightGreen600: string;
    lightGreen650: string;
    lightGreen700: string;
    lightGreen750: string;
    lightGreen800: string;
    yellow100: string;
    yellow150: string;
    yellow200: string;
    yellow250: string;
    yellow300: string;
    yellow350: string;
    yellow400: string;
    yellow450: string;
    yellow500: string;
    yellow550: string;
    yellow600: string;
    yellow650: string;
    yellow700: string;
    yellow750: string;
    yellow800: string;
    orange100: string;
    orange150: string;
    orange200: string;
    orange250: string;
    orange300: string;
    orange350: string;
    orange400: string;
    orange450: string;
    orange500: string;
    orange550: string;
    orange600: string;
    orange650: string;
    orange700: string;
    orange750: string;
    orange800: string;
    amber100: string;
    amber150: string;
    amber200: string;
    amber250: string;
    amber300: string;
    amber350: string;
    amber400: string;
    amber450: string;
    amber500: string;
    amber550: string;
    amber600: string;
    amber650: string;
    amber700: string;
    amber750: string;
    amber800: string;
    red50: string;
    red100: string;
    red150: string;
    red200: string;
    red250: string;
    red300: string;
    red350: string;
    red400: string;
    red450: string;
    red500: string;
    red550: string;
    red600: string;
    red650: string;
    red700: string;
    red750: string;
    red800: string;
};
/** Spacings */
export declare const spacings: {
    xs: number;
    s: number;
    m: number;
    l: number;
    xl: number;
    xxl: number;
};
/** Icons */
export declare const iconSizes: {
    s: string;
    m: string;
    l: string;
};
/** Borders */
export declare const borderRadius: {
    s: number;
    m: number;
};
export declare const borderWidth: {
    s: string;
    m: string;
};
/** Fonts */
export declare const fontStack: {
    roboto: string;
    rubrik: string;
};
export declare const fontWeight: {
    light: number;
    regular: number;
    medium: number;
    bold: number;
};
export declare const typography: {
    headings: {
        xxs: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
        xs: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
        s: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
        m: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
        l: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
        xl: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
        xxl: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
    };
    text: {
        xxs: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
        xs: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
        s: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
        m: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
        l: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
        xl: {
            fontSize: string;
            fontFamily: string;
            fontWeight: number;
            lineHeight: string;
        };
    };
};
/** Grid */
export declare const grids: {
    mobile: {
        cols: number;
        maxWidth: string;
        gutter: number;
        margin: number;
    };
    tablet: {
        m: {
            cols: number;
            maxWidth: string;
            gutter: number;
            margin: number;
        };
        l: {
            cols: number;
            maxWidth: string;
            gutter: number;
            margin: number;
        };
    };
    desktop: {
        m: {
            cols: number;
            maxWidth: string;
            gutter: number;
            margin: number;
        };
        l: {
            cols: number;
            maxWidth: string;
            gutter: number;
            margin: number;
        };
    };
};
/** Breakpoints */
export declare const breakpoints: {
    s: number;
    m: number;
    l: number;
};
/** Media queries */
export declare const mq: Record<string, string> | import("../util/mq").Mq;
/** Layers */
export declare const zIndex: {
    default: number;
    absolute: number;
    select: number;
    header: number;
    sidebar: number;
    modal: number;
    snackbar: number;
    tooltip: number;
};
/** Transitions */
export declare const transitions: {
    default: string;
    slow: string;
};
/** Palette */
export declare const palette: {
    primary: {
        light: string;
        main: string;
        dark: string;
    };
    secondary: {
        light: string;
        main: string;
        dark: string;
    };
    text: {
        primary: string;
        secondary: string;
        disabled: string;
    };
    error: {
        main: string;
    };
    warning: {
        main: string;
    };
    success: {
        main: string;
    };
    divider: string;
};
/** Shadows */
export declare const shadows: {
    shadow01: string;
    shadow02: string;
    shadow04: string;
    shadow08: string;
};
